package com.wordpress.marleneknoche.sea.logic;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.io.File;
import java.util.HashMap;
import java.util.Map;

import org.junit.Test;

public class LogicIntegrationTest {

	private static final String SEQUENCE = "GGAATTTAGGGAGTTCCCACATTGCCCAGACGACTCGTATAGAATTGGTAGTTGGCCATGCGTCCATATCACAAAGACACAGTCCCTGGCCGACCACACTGTAACCACGAATATGCCCTATCGTACGGGTTGGGATGCACTTTTGAGTTATACGCGCTCGAATCTATGCCCAGTACACATGGTGCCGACACCTAACTAGGCAGTGAGGGGCACTCAGACCTGACATGAGCGGAAGAAAGAACCCGCGGGGGCCCCACGACGTAGCGGCGACGGCTCAACCAATGCCCCGCCCCTTTCATAAGGCCAAGCGGACTGGGCTTTCGCCCGAGTCTAAACCCACTGTATTTACCATTCATAGTCAACAGAGGGACTTTCAAAATTCCTAAACTGGTTACTGACTAAGAGGAATCCTCGCGCTAATGAAGACAACCTCCATAGAGGTCAAATGGCGCGCAGTTGACTTCAGTATTGACCTTCTTCAGGGTCCCCCATCTTTGATACTTCACTTATGGACCCGGCCACCGTGAGTTGAATCCCGGCGTCCCTCGCGTCCCCAACACAGACAATATTTTTACGTGTCCAAGGGCGGAAAGTGACGAGGTGAGAACTGGCGCCGCGAGACCGGCCCGATTTCTAATAGGCGGGATAGAGATCTGCCCGACGCATTTCACTTGTAGTCACTCACGGTATGACTGTGCATGCACTGACCGTCGCTGGCGTGTCTTTAATTTAAGCTAGGCTTGACGTGGAGTGCAGAATGACCATGTTCAAGGTGCTTCGGGGCTATATACTTGGGATAAACGCGATCCTGCGGAGTAGCGTCGAGAACACCGACTGCCGAATGTACAATCCGCGTGACAATGCCGAGGCTCGAGATATCACTTGAACTGCGGGCGAATCGATTCGAGAGCCCGATCGTTAACAAGTCGTCGGCTGTAGCCAATAATATCTTGGTTTTAGATCTTGAGTGTGGGGGCGTTTACTTAACCATCCGAACGCG";

	private static final File EXAMPLE_FILE = new File(Thread.currentThread()
			.getContextClassLoader().getResource("sequence.txt").getFile());

	private static final String COMPLEMENTARY_SEQUENCE = "CGCGTTCGGATGGTTAAGTAAACGCCCCCACACTCAAGATCTAAAACCAAGATATTATTGGCTACAGCCGACGACTTGTTAACGATCGGGCTCTCGAATCGATTCGCCCGCAGTTCAAGTGATATCTCGAGCCTCGGCATTGTCACGCGGATTGTACATTCGGCAGTCGGTGTTCTCGACGCTACTCCGCAGGATCGCGTTTATCCCAAGTATATAGCCCCGAAGCACCTTGAACATGGTCATTCTGCACTCCACGTCAAGCCTAGCTTAAATTAAAGACACGCCAGCGACGGTCAGTGCATGCACAGTCATACCGTGAGTGACTACAAGTGAAATGCGTCGGGCAGATCTCTATCCCGCCTATTAGAAATCGGGCCGGTCTCGCGGCGCCAGTTCTCACCTCGTCACTTTCCGCCCTTGGACACGTAAAAATATTGTCTGTGTTGGGGACGCGAGGGACGCCGGGATTCAACTCACGGTGGCCGGGTCCATAAGTGAAGTATCAAAGATGGGGGACCCTGAAGAAGGTCAATACTGAAGTCAACTGCGCGCCATTTGACCTCTATGGAGGTTGTCTTCATTAGCGCGAGGATTCCTCTTAGTCAGTAACCAGTTTAGGAATTTTGAAAGTCCCTCTGTTGACTATGAATGGTAAATACAGTGGGTTTAGACTCGGGCGAAAGCCCAGTCCGCTTGGCCTTATGAAAGGGGCGGGGCATTGGTTGAGCCGTCGCCGCTACGTCGTGGGGCCCCCGCGGGTTCTTTCTTCCGCTCATGTCAGGTCTGAGTGCCCCTCACTGCCTAGTTAGGTGTCGGCACCATGTGTACTGGGCATAGATTCGAGCGCGTATAACTCAAAAGTGCATCCCAACCCGTACGATAGGGCATATTCGTGGTTACAGTGTGGTCGGCCAGGGACTGTGTCTTTGTGATATGGACGCATGGCCAACTACCAATTCTATACGAGTCGTCTGGGCAATGTGGGAACTCCCTAAATTCC";
	

	@Test
	public void solveAllQuestionstest() {

		TextFileReader textFileReader = new TextFileReader();

		String loadedSequence = textFileReader.loadText(EXAMPLE_FILE);

		assertEquals(SEQUENCE, loadedSequence);
		
		PatternMatcher patternMatcher = new PatternMatcher();
		
		//Task 1.1
		assertEquals(10, patternMatcher.countGGG(loadedSequence));
		
		//Task 1.2
		assertFalse(patternMatcher.hasBrownEyes(loadedSequence));
		
		//Task 1.3
		NucleobaseCounter nucleobaseCounter = new NucleobaseCounter();
		
		Map<String,Integer> nucleobaseMap = new HashMap<String,Integer>();
		
		nucleobaseMap = nucleobaseCounter.countNucleobases(loadedSequence);
		
		int numberOfG = nucleobaseMap.get("G");
		int numberOfC = nucleobaseMap.get("C");
		int numberOfA = nucleobaseMap.get("A");
		int numberOfT = nucleobaseMap.get("T");
				
		assertEquals(259, numberOfG,0);
		assertEquals(265,numberOfC,0);
		assertEquals(248,numberOfA,0);
		assertEquals(228,numberOfT,0);
		
		//Task 1.4
		
		int indexPosition = patternMatcher.checkFirstOccurenceOfCTAG(loadedSequence);
		
		assertEquals(196, indexPosition,0);
		
		//Task 2.1
		
		
		assertTrue(nucleobaseCounter.hasMorePurinesThanPyrimidines(nucleobaseMap));
				
		//Task 2.2
		assertFalse(patternMatcher.hasSignsForFromingensDischrypsia(loadedSequence));
		
		//Task 2.3
		
		ComplementarySequenceBuilder complementarySequenceBuilder = new ComplementarySequenceBuilder();
		String complementarySequence = complementarySequenceBuilder.invertNucleobases(loadedSequence);
		
		assertEquals(COMPLEMENTARY_SEQUENCE, complementarySequence);
		
		
		
	}

}
